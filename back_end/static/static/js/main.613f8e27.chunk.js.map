{"version":3,"sources":["views/searchPage.js","views/resPage.js","views/frontPage.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["Search","Input","TabPane","Tabs","SearchCSSDiv","styled","div","openNotification","key","Date","now","btn","type","size","onClick","notification","close","open","message","description","fontColors","i","params","salary","keyword","dqs","React","memo","props","options1","value","label","options2","onChangeDqs","console","log","onChangeSalary","useState","fontColor","setFontColor","useEffect","count","setInterval","length","clearInterval","className","defaultActiveKey","onChange","style","tab","options","placeholder","margin","onSearch","history","push","JSON","stringify","enterButton","color","Swiper","parse","match","pic","setPic","isLoad","setIsLoad","fetch","then","res","json","url","tip","width","src","require","Highcharts","wordcloud","path","exact","component","searchPage","resPage","data","Object","word","sort","a","b","slice","map","item","name","itemData","weight","Math","floor","random","chart","credits","enabled","exporting","tooltip","colors","spacingBottom","spacingTop","backgroundColor","series","rotation","maxFontSize","minFontSize","fontFamily","fontWeight","plotOptions","cursor","events","click","e","point","title","text","align","fontSize","lineHeight","drawWinCloud","bing","zhu","subtitle","xAxis","labels","yAxis","min","legend","pointFormat","dataLabels","format","y","drawPic","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","theme","contrastTextColor","colorByPoint","id","height","moment","locale","App","zhCN","renderRoutes","config","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.613f8e27.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, Button, notification, Tabs, Cascader } from 'antd';\r\nconst { Search } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\nconst SearchCSSDiv = styled.div`\r\n    background:url('https://xgpax.top/wp-content/uploads/2020/10/188ebc2a7772036b536b948a46c55782.jpg') 100%;   \r\n    margin:auto;\r\n    padding:auto;\r\n    width:100vw;\r\n    height:100vh;\r\n    text-align:center;\r\n    display:flex;\r\n    color:#ffffff;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    .search-box{\r\n        width:700px;\r\n        display:flex;\r\n        flex-direction:row;\r\n        text-align:center;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n    .description{\r\n        margin-top:100px;\r\n        font-size: 18px;\r\n        transition:1s all;\r\n    }\r\n`\r\nconst openNotification = () => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n        <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n            确认\r\n        </Button>\r\n    );\r\n    notification.open({\r\n        message: '提示',\r\n        description: \"请输入要搜索的内容\",\r\n        btn,\r\n        key,\r\n    });\r\n};\r\nconst fontColors = [\"#e74c3c\", \"#3498db\", \"#2ecc71\", \"#f1c40f\", \"#9b59b6\"]\r\nlet i = 0;\r\nlet params = {\r\n    salary: '',\r\n    keyword: '',\r\n    dqs: ''\r\n}\r\nfunction SearchPage(props) {\r\n    const callback = (key) => {\r\n        console.log(key)\r\n    }\r\n    // 地区展示option\r\n    const options1 = [\r\n        {\r\n            value: '010',\r\n            label: '北京',\r\n        },\r\n        {\r\n            value: '020',\r\n            label: '上海',\r\n        },\r\n        {\r\n            value: '050020',\r\n            label: '广州',\r\n        },\r\n        {\r\n            value: '050090',\r\n            label: '深圳',\r\n        },\r\n        {\r\n            value: '070020',\r\n            label: \"杭州\"\r\n        }\r\n    ];\r\n    // 薪资区域options\r\n    const options2 = [\r\n        {\r\n            value: '10$15',\r\n            label: '10-15w',\r\n        },\r\n        {\r\n            value: '15$20',\r\n            label: '15-20w',\r\n        },\r\n        {\r\n            value: '20$30',\r\n            label: '20-30w',\r\n        },\r\n        {\r\n            value: '30$50',\r\n            label: '30-50w',\r\n        },\r\n        {\r\n            value: '50$100',\r\n            label: '50-100w',\r\n        },\r\n        {\r\n            value: '100$999',\r\n            label: '100w以上',\r\n        }\r\n    ];\r\n    function onChangeDqs(value) {\r\n        console.log(value[0]);\r\n        params.dqs = value[0];\r\n    }\r\n    function onChangeSalary(value) {\r\n        console.log(value[0]);\r\n        params.salary = value[0];\r\n    }\r\n    const [fontColor, setFontColor] = useState(fontColors[i])\r\n    // 颜色变化效果\r\n    useEffect(() => {\r\n        let count = setInterval(() => {\r\n            setFontColor(fontColors[i++])\r\n            if (i === fontColors.length - 1) {\r\n                i = 0;\r\n            }\r\n\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(count)\r\n        }\r\n    }, [])\r\n    return (\r\n        <SearchCSSDiv>\r\n            <div className=\"search-container\">\r\n                <Tabs defaultActiveKey=\"1\" onChange={callback} style={{ \"color\": \"#fff\" }}>\r\n                    <TabPane tab=\"通过前端生成词云图和分析图\" key=\"1\">\r\n                        <div className='search-box'>\r\n                            <Cascader options={options2} placeholder=\"请选择薪资范围\" onChange={onChangeSalary} style={{ margin: \"3px\" }} />\r\n                            <Cascader options={options1} placeholder=\"请选择地区\" onChange={onChangeDqs} style={{ margin: \"3px\" }} />\r\n                            <Search placeholder=\"请输入要查找的岗位\"\r\n                                onSearch={value => {\r\n                                    if (value !== \"\") {\r\n                                        params.keyword = value\r\n                                        props.history.push(`/front/${JSON.stringify(params)}`)\r\n                                    } else {\r\n                                        openNotification()\r\n                                    }\r\n                                }}\r\n                                enterButton />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"通过后端生成词云图（仅词云图）（较慢）\" key=\"2\">\r\n                        <div className='search-box'>\r\n                            <Cascader options={options2} placeholder=\"请选择薪资范围\" onChange={onChangeSalary} style={{ margin: \"3px\" }} />\r\n                            <Cascader options={options1} placeholder=\"请选择地区\" onChange={onChangeDqs} style={{ margin: \"3px\" }} />\r\n                            <Search placeholder=\"请输入要查找的岗位\"\r\n                                onSearch={value => {\r\n                                    if (value !== \"\") {\r\n                                        params.keyword = value\r\n                                        props.history.push(`/res/${JSON.stringify(params)}`)\r\n                                    } else {\r\n                                        openNotification()\r\n                                    }\r\n\r\n                                }}\r\n                                enterButton />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n                <div className=\"description\" style={{ color: fontColor }}>\r\n                    本网站基于猎聘进行相关爬取，服务器配置较低，后端生成图片较慢，请尽量使用前端生成图片。\r\n                </div>\r\n            </div>\r\n        </SearchCSSDiv>\r\n    )\r\n}\r\nexport default React.memo(SearchPage)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Image, Spin, Alert, Button } from 'antd';\r\nimport styled from 'styled-components'\r\nconst Swiper = styled.div`\r\n    background:url('https://xgpax.top/wp-content/uploads/2020/08/天气之子.jpg') 100%;\r\n    margin:auto;\r\n    padding:auto;\r\n    width:100vw;\r\n    height:100vh;\r\n    text-align:center;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    .left-top{\r\n        position: fixed;\r\n        left:30px;\r\n        top:50px;\r\n    }\r\n`\r\nfunction ResPage(props) {\r\n    const { keyword, dqs, salary } = JSON.parse(props.match.params.value)\r\n    console.log(props)\r\n    const [pic, setPic] = useState(\"\")\r\n    const [isLoad, setIsLoad] = useState(false)\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        fetch(`http://47.102.212.191:10010/getPic?keyword=${keyword}&dqs=${dqs}&salary=${salary}`).then(res => res.json()).then(res => {\r\n            console.log(res)\r\n            setPic(res.url)\r\n            setIsLoad(true)\r\n        })\r\n    }, [])\r\n    return (<div>\r\n        <Swiper>\r\n            <Button type=\"primary\" className=\"left-top\" onClick={() => { props.history.push('/') }}>返回上层</Button>\r\n            {!isLoad && <Spin tip=\"Loading...\">\r\n                <Alert\r\n                    message=\"正在请求中\"\r\n                    description=\"正在为您生成专业技能词云图\"\r\n                    type=\"info\"\r\n                />\r\n            </Spin>}\r\n            {isLoad && <Image\r\n                width={500}\r\n                src={`http://47.102.212.191:10010/${pic}`}\r\n            />}\r\n        </Swiper>\r\n    </div >)\r\n}\r\nexport default React.memo(ResPage)","import React, { useEffect, useState } from 'react'\r\nimport { Button, Progress, Spin, Alert } from 'antd';\r\nimport styled from 'styled-components'\r\nimport Highcharts from 'highcharts/highcharts'\r\nimport wordcloud from 'highcharts/modules/wordcloud'\r\nimport highcharts_zh from 'highcharts'\r\n// 运行 \r\nrequire('highcharts/modules/exporting')(Highcharts);\r\nwordcloud(Highcharts)\r\n// 样式设置\r\nconst Swiper = styled.div`\r\n    background:url('https://xgpax.top/wp-content/uploads/2020/08/天气之子.jpg') 100%;\r\n    margin:auto;\r\n    padding:auto;\r\n    width:100vw;\r\n    height:100vh;\r\n    text-align:center;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    .left-top{\r\n        position: fixed;\r\n        left:30px;\r\n        top:50px;\r\n    }\r\n    color:#fff; \r\n    .pic-container{\r\n        display:flex;\r\n        flex-direction:row;\r\n        justify-content:center;\r\n        align-items:center;\r\n        >*{\r\n            margin:5px;\r\n            border-radius:10px;\r\n        }\r\n    }\r\n`\r\n// 词云图设置\r\nconst drawWinCloud = (data) => {\r\n    Highcharts.chart('container', {\r\n        //highcharts logo\r\n        credits: { enabled: true },\r\n        //导出\r\n        exporting: { enabled: true },\r\n        //提示关闭\r\n        tooltip: { enabled: false },\r\n        //颜色配置\r\n        colors: [\r\n            '#ffffff', '#00c0d7', '#2594ce', '#de4c85',\r\n            '#ff7f46', '#ffb310', '#e25c52'\r\n        ],\r\n        //图形配置\r\n        chart: {\r\n            spacingBottom: 15,\r\n            spacingTop: 12,\r\n            // spacingLeft: 5,\r\n            // spacingRight: 5,\r\n            backgroundColor: \"rgba(0, 0, 0,0.5)\",\r\n        },\r\n\r\n        series: [{\r\n            type: \"wordcloud\",// 类型\r\n            data: data,\r\n            rotation: 0,//字体不旋转\r\n            maxFontSize: 30,//最大字体\r\n            minFontSize: 16,//最小字体\r\n            style: {\r\n                fontFamily: \"微软雅黑\",\r\n                fontWeight: '500'\r\n            }\r\n        }\r\n        ],\r\n        //点击事件方法\r\n        plotOptions: {\r\n            series: {\r\n                cursor: 'pointer',\r\n                events: {\r\n                    click: function (e) {\r\n                        // 单条数据\r\n                        console.log(e.point.options.itemData)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        //标题配置\r\n        title: {\r\n            text: '词云图 ●',\r\n            // x: 5,\r\n            // y: 15,\r\n            align: 'left',\r\n            style: {\r\n                color: 'white',\r\n                fontSize: '16px',\r\n                fontWeight: 'bold',\r\n                lineHeight: '1.2',\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n// 柱状图设置\r\nconst drawPic = (data) => {\r\n    Highcharts.chart('container2', {\r\n        chart: {\r\n            type: 'column'\r\n        },\r\n        title: {\r\n            text: '各词语TF-IDF值'\r\n        },\r\n        subtitle: {\r\n            text: '统计前10位'\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            labels: {\r\n                rotation: -45  // 设置轴标签旋转角度\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'TF-IDF值'\r\n            }\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        tooltip: {\r\n            pointFormat: 'TF-IDF: <b>{point.y:.3f}</b>'\r\n        },\r\n        series: [{\r\n            name: 'TF-IDF值',\r\n            data: data,\r\n            dataLabels: {\r\n                enabled: true,\r\n                rotation: -90,\r\n                color: '#FFFFFF',\r\n                align: 'right',\r\n                format: '{point.y:.3f}', // :.1f 为保留 1 位小数\r\n                y: 1\r\n            }\r\n        }]\r\n    });\r\n}\r\nconst drawBing =(bing)=>{\r\n    Highcharts.chart('container3', {\r\n\t\tchart: {\r\n\t\t\t\tplotBackgroundColor: null,\r\n\t\t\t\tplotBorderWidth: null,\r\n\t\t\t\tplotShadow: false,\r\n\t\t\t\ttype: 'pie'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\t\ttext: '前十词汇比例'\r\n\t\t},\r\n\t\ttooltip: {\r\n\t\t\t\tpointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n\t\t},\r\n\t\tplotOptions: {\r\n\t\t\t\tpie: {\r\n\t\t\t\t\t\tallowPointSelect: true,\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\tformat: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\t\tcolor: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tseries: [{\r\n\t\t\t\tname: 'Brands',\r\n\t\t\t\tcolorByPoint: true,\r\n\t\t\t\tdata:bing\r\n\t\t}]\r\n});\r\n}\r\nfunction FrontPage(props) {\r\n    const { keyword, dqs, salary } = JSON.parse(props.match.params.value)\r\n    console.log(keyword, dqs, salary);\r\n    // 提取关键词\r\n    const [isLoad, setIsLoad] = useState(false)\r\n    useEffect(() => {\r\n        let data = [];\r\n        fetch(`http://47.102.212.191:10010/getTF?keyword=${keyword}&dqs=${dqs}&salary=${salary}`).then(res => res.json()).then((res) => {\r\n            console.log(res);\r\n            res = Object(res.word)\r\n            for (let key in res) {\r\n                data.push({\r\n                    key,\r\n                    count: res[key]\r\n                })\r\n            }\r\n            data.sort((a, b) => b.count - a.count);\r\n            data = data.slice(0, 50)\r\n            console.log(data);\r\n            data = data.map((item) => {\r\n                let obj = {\r\n                    name: item.key || \"错误\",\r\n                    itemData: item,\r\n                    weight: Math.floor(Math.random() * 3 + 1)//控制加粗,随机数取1~3\r\n                };\r\n                return obj;\r\n            });\r\n            console.log(data);\r\n            // 清除load\r\n            setIsLoad(true);\r\n            // 挂载词云图\r\n            drawWinCloud(data);\r\n            // 挂载柱状图\r\n            let zhu = data.map(item => {\r\n                console.log(item)\r\n                return [\r\n                    item.name,\r\n                    item.itemData.count\r\n                ]\r\n            })\r\n            zhu.sort((a, b) => a[1] > b[1]);\r\n            console.log(zhu);\r\n            drawPic(zhu.slice(0, 10));\r\n            // 挂载饼状图\r\n            zhu = zhu.slice(0, 10);\r\n            zhu = zhu.map(item=>{\r\n                return {\r\n                    name:item[0],\r\n                    y:item[1]\r\n                }\r\n            })\r\n            drawBing(zhu);\r\n        })\r\n    }, [])\r\n    return (<div>\r\n        <Swiper>\r\n            <Button type=\"primary\" className=\"left-top\" onClick={() => { props.history.push('/') }}>返回上层</Button>\r\n            {!isLoad && <Spin tip=\"Loading...\">\r\n                <Alert\r\n                    size=\"large\"\r\n                    message=\"正在加载中\"\r\n                    description=\"爬取中，请耐心等待\"\r\n                    type=\"info\"\r\n                />\r\n            </Spin>}\r\n            <div className=\"pic-container\">\r\n                {/**词云图 */}\r\n                <div id=\"container\" style={{ width: \"500px\", height: \"400px\" }}>\r\n\r\n                </div>\r\n                {/**柱状图 */}\r\n                <div id=\"container2\" style={{ width: \"500px\", height: \"400px\" }}>\r\n\r\n                </div>\r\n                {/**饼状图 */}\r\n                <div id=\"container3\" style={{ width: \"500px\", height: \"400px\" }}>4\r\n                \r\n                </div>\r\n            </div>\r\n\r\n        </Swiper>\r\n    </div>)\r\n}\r\nexport default React.memo(FrontPage)","import searchPage from '../views/searchPage'\r\nimport resPage from '../views/resPage'\r\nimport frontPage from '../views/frontPage'\r\nexport default [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: searchPage,\r\n    },\r\n    {\r\n        path: '/res/:value',\r\n        exact: true,\r\n        component: resPage,\r\n    },\r\n    {\r\n        path: '/front/:value',\r\n        exact: true,\r\n        component: frontPage\r\n    }\r\n]","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { renderRoutes } from 'react-router-config'\nimport config from './routes/index'\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { ConfigProvider } from 'antd';\nmoment.locale('zh-cn');\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <ConfigProvider locale={zhCN}>\n          {renderRoutes(config)}\n        </ConfigProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}